clc; clear all; close all;
yalmip('clear');
warning off;

%%
global data model;

%% read data

% filename = 'output'; 
% filename = 'output_single'; 
filename = 'testdata_t60'; 
func_readdata(filename); % 1-updata, 0-remain

num_pipeline = size(data.var.Min,2);% 50个管道
num_trainingsample = 800;% 用300个样本来训练
num_testsample = 3200;%200个样本测试

nd_t60 = 2;
nd_t30 = 2;
nd_t15 = 4;

nd = nd_t60;
model_order = nd + 1;
model_order_u = 3;

%%
data.settings.num_trainingsample = num_trainingsample;
data.settings.num_testsample = num_testsample;
data.settings.model_order = model_order;
data.settings.model_order_u = model_order_u;

%% data processing
for k_pipeline = 1 : num_pipeline
    model.data.pipeline(k_pipeline,1).Min = data.var.Min(:,k_pipeline);
    model.data.pipeline(k_pipeline,1).Pin = data.var.Pin(:,k_pipeline);

    model.data.pipeline(k_pipeline,1).Mout = data.var.Mout(:,k_pipeline);
    model.data.pipeline(k_pipeline,1).Pout = data.var.Pout(:,k_pipeline);

end

%% normalization
fprintf('%s\n', '------------------- Normalization ----------------------');
model.data.basevalue_M = 2;
model.data.basevalue_P = 5*1e6;

for k_pipeline = 1 : num_pipeline

    model.data.pipeline(k_pipeline,1).Min_normalized = ...
        model.data.pipeline(k_pipeline,1).Min/model.data.basevalue_M;
    model.data.pipeline(k_pipeline,1).Mout_normalized = ...
        model.data.pipeline(k_pipeline,1).Mout/model.data.basevalue_M;

    model.data.pipeline(k_pipeline,1).Pin_normalized = ...
        model.data.pipeline(k_pipeline,1).Pin/model.data.basevalue_P;
    model.data.pipeline(k_pipeline,1).Pout_normalized = ...
        model.data.pipeline(k_pipeline,1).Pout/model.data.basevalue_P;
end

%% --------------------------------------------
%% EDMD
func_model_based_on_EDMD();

%% ---------------- Save Matrix --------------------------
% save('Koopman_Matrix_t15.mat', 'model');

% % 
% 
% h_fig = figure();          % gcf: get current figure
% h_axis = gca;              % gca: get current axis
% 
% % % set position & color
% % position, color,
% left = 10; bottom = 10; width = 10; height = 6;
% % units:inches|centimeters|normalized|points|{pixels}|characters
% set(h_fig, 'Units','centimeters', 'position', [left, bottom, width, height], 'color', 'w');
% 
% % % Remove the blank edge
% set(gca,'LooseInset',get(gca,'TightInset'));
% 
% % % Setting color
% cmap = brewermap(6,'Set3');
% h_fig.Colormap = cmap;
% h_axis.Colormap = cmap;
% colororder(cmap)
% 
% x = 1:4000;
% for k = 1:1
%     plot(x,model.verify(k_pipeline,1).error_x_relative(:, 1));   
% end
% grid
% set(gca,'FontName','Times New Roman','FontSize',12);
% xlabel('NO.','fontname','Times New Roman','fontsize',13);
% ylabel('Relative error of Pout(%)','fontname','Times New Roman','fontsize',13);
% % 
% % h=legend('Mout','Pout',...
% %     'Location','NorthWest','fontname','Times New Roman','fontsize',12);
% % h.NumColumns=2;
% % set(h,'Orientation','horizon');
% % set (h,'box','off');
% hold off
% %%
% h_fig = figure();          % gcf: get current figure
% h_axis = gca;              % gca: get current axis
% % % set position & color
% % position, color,
% left = 10; bottom = 10; width = 10; height = 6;
% % units:inches|centimeters|normalized|points|{pixels}|characters
% set(h_fig, 'Units','centimeters', 'position', [left, bottom, width, height], 'color', 'w');
% % % Remove the blank edge
% set(gca,'LooseInset',get(gca,'TightInset'));
% % % Setting color
% cmap = brewermap(6,'Set3');
% h_fig.Colormap = cmap;
% h_axis.Colormap = cmap;
% colororder(cmap)
% 
% x = 1:4000;
% for k = 1:1
%     plot(x,model.verify(k_pipeline,1).error_y_relative(:, 1));   
% end
% grid
% set(gca,'FontName','Times New Roman','FontSize',12);
% xlabel('NO.','fontname','Times New Roman','fontsize',13);
% ylabel('Relative error of Mout(%)','fontname','Times New Roman','fontsize',13);
% hold off
%% draw
% 
% h_fig = figure();          % gcf: get current figure
% h_axis = gca;              % gca: get current axis
% 
% % % set position & color
% % position, color,
% left = 10; bottom = 10; width = 10; height = 6;
% % units:inches|centimeters|normalized|points|{pixels}|characters
% set(h_fig, 'Units','centimeters', 'position', [left, bottom, width, height], 'color', 'w');
% 
% % % Remove the blank edge
% set(gca,'LooseInset',get(gca,'TightInset'));
% 
% % % Setting color
% cmap = brewermap(8,'Set3');
% h_fig.Colormap = cmap;
% h_axis.Colormap = cmap;
% colororder(cmap)
% 
% x = 1:1000;
% for k = 1:num_pipeline
%     plot(x,model.verify(k_pipeline,1).error_x_relative(:, 1));
%     hold on
% end
% grid
% set(gca,'FontName','Times New Roman','FontSize',12);
% xlabel('NO.','fontname','Times New Roman','fontsize',13);
% ylabel('Relative error (%)','fontname','Times New Roman','fontsize',13);
% hold off;
% 
% % %
% h_fig = figure();          % gcf: get current figure
% h_axis = gca;              % gca: get current axis
% 
% % % set position & color
% % position, color,
% left = 10; bottom = 10; width = 10; height = 6;
% % units:inches|centimeters|normalized|points|{pixels}|characters
% set(h_fig, 'Units','centimeters', 'position', [left, bottom, width, height], 'color', 'w');
% 
% % % Remove the blank edge
% set(gca,'LooseInset',get(gca,'TightInset'));
% 
% % % Setting color
% cmap = brewermap(8,'Set3');
% h_fig.Colormap = cmap;
% h_axis.Colormap = cmap;
% colororder(cmap)
% 
% for k = 1:num_pipeline
%     plot(x,model.verify(k_pipeline,1).error_y_relative(:, 1));
%     hold on
% end
% grid
% 
% set(gca,'FontName','Times New Roman','FontSize',12);
% xlabel('NO.','fontname','Times New Roman','fontsize',13);
% ylabel('Relative error (%)','fontname','Times New Roman','fontsize',13);
% hold off;